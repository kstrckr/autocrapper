/*var inputFolder = Folder.selectDialog ("Select selects");var outputFolder = Folder.selectDialog("Select Output Destination");var dirtyFileList = inputFolder.getFiles();var fileList = [];while (dirtyFileList.length > 0){    if (dirtyFileList[0].hidden === true){        dirtyFileList.splice(0,1);        };    var nextFile = dirtyFileList.shift();    fileList.push(nextFile);};open(fileList[0]);*/var width = app.activeDocument.width;var height = app.activeDocument.height;var readHistogram = function() {    var histo = activeDocument.histogram;        var sum = function(arr) {        var total = 0;                for (var i = 0; i < arr.length; i++){            total += arr[i];            }                return total;        };        var findWeightedAvg = function(arr, total){        var avgTally = 0;                for (var i = 0; i < arr.length; i++){            avgTally += i*(arr[i]/total);            }                return avgTally        }        var findStdDev = function(arr, mean, total){        var stdTally = 0;                for (var i = 0; i < arr.length; i++){            stdTally += Math.pow((mean-i), 2)*arr[i];            }                stdTally /= total;                return Math.sqrt(stdTally);                }        var pixelTotal = sum(histo);    var histoMean = findWeightedAvg(histo, pixelTotal);    var histoStdDev = findStdDev(histo, histoMean, pixelTotal);        return histoStdDev;        }var drawHorizontal = function(d) {        var mid = height/2;            var selectionBounds = [    [0, (mid-1)-d],    [width, (mid-1)-d],    [width, (mid)-d],    [0, (mid)-d]    ];        app.activeDocument.selection.select(selectionBounds, SelectionType.REPLACE,0,false);    };var scanVertical = function(start, delta){    drawHorizontal(start);    var edgeCheck = readHistogram();    var position = start;    while (edgeCheck > 5){        position += delta;        drawHorizontal(position);        edgeCheck = readHistogram();        }};scanVertical(0, 20);scanVertical(0, -20);